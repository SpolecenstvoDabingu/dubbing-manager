# Generated by Django 5.2.4 on 2025-07-24 11:12

import database.utils
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dubbing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Dubbing Name', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='', max_length=1024)),
                ('urls', models.TextField(blank=True, default='', max_length=1024)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dubbing', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Character Name', max_length=128)),
                ('image', models.ImageField(blank=True, default='/media/static/no_thumbnail.png', max_length=512, null=True, upload_to=database.utils.HashedFilePath('image', 'images'))),
                ('description', models.TextField(blank=True, default='', max_length=1024)),
                ('dubbing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_stable', to='database.dubbing')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Episode Name', max_length=128)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField(default=database.utils.one_week_from_now)),
                ('season', models.PositiveSmallIntegerField(default=1)),
                ('episode', models.PositiveSmallIntegerField(default=1)),
                ('script', models.FileField(max_length=512, upload_to=database.utils.HashedFilePath('script', 'scripts'))),
                ('urls', models.TextField(blank=True, default='', max_length=1024)),
                ('dubbing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episode', to='database.dubbing')),
            ],
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Scene Name', max_length=128)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField(default=database.utils.one_week_from_now)),
                ('script', models.FileField(max_length=512, upload_to=database.utils.HashedFilePath('script', 'scripts'))),
                ('urls', models.TextField(blank=True, default='', max_length=1024)),
                ('dubbing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene', to='database.dubbing')),
            ],
        ),
        migrations.CreateModel(
            name='UserCharacterStable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='database.character')),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='database.episode')),
                ('scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='database.scene')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCharacterTemporary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done', models.BooleanField(default=False)),
                ('name', models.CharField(default='Character Name', max_length=128)),
                ('image', models.ImageField(max_length=512, upload_to=database.utils.HashedFilePath('image', 'images'))),
                ('description', models.TextField(blank=True, default='', max_length=1024)),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='database.episode')),
                ('scene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s', to='database.scene')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('is_admin', 'User is server Admin')],
            },
        ),
    ]
